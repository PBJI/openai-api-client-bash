check_args () {
option="${1}" 
case ${option} in 
   -a) auth="${2}" 
      openai_key=$(cat ~/.bash_profile | grep OPENAI_API_KEY -c)
      if [[ "$openai_key" == 1 ]]; then
      sed -i '/OPENAI_API_KEY/ { c \
      export OPENAI_API_KEY="${2}"
      }' ~/.bash_profile || echo "Key not stored globally"
      export OPENAI_API_KEY="${2}" || echo "Key not stored locally"
      else
      export OPENAI_API_KEY="${2}" || echo "Key not updated locally"
      echo export OPENAI_API_KEY="${2}" >> ~/.bash_profile || echo "Key not updated globally"
      fi
      ;;  
   *)  
      echo "`basename ${0}`:usage: [-a auth_token \"prompt\"]" 
      exit 1 # Command to come out of the program with status 1
      ;; 
esac
}

scriptpy () {
python - << eof
import openai
import os

openai.api_key = os.getenv("OPENAI_API_KEY")

response = openai.Completion.create(
    model="text-davinci-003",
    prompt="$1",
    temperature=0,
    max_tokens=500,
    top_p=1.0,
    frequency_penalty=0.2,
    presence_penalty=0.0,
)
print(response["choices"][0]["text"])
print("$1")
eof
}

if [[ "$#" == 0 ]]; then
echo "Type your prompt: "
IFS=''
prompt="$(</dev/stdin)"
echo 'Processing...\n\n'
scriptpy "$prompt"
IFS=' \n\t'
elif [[ "$#" == 2 ]]; then
check_args $1 $2
IFS=''
echo "Type your prompt: "
prompt="$(</dev/stdin)"
echo 'Processing...\n\n'
scriptpy $prompt
IFS=' \n\t'
else
echo "invalid input; usage: runai || runai -a \"auth_token\""
fi
